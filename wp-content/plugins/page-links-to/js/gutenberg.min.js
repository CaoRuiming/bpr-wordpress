(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _wp$components = wp.components,
    PanelRow = _wp$components.PanelRow,
    TextControl = _wp$components.TextControl,
    CheckboxControl = _wp$components.CheckboxControl;
var _wp$compose = wp.compose,
    withInstanceId = _wp$compose.withInstanceId,
    compose = _wp$compose.compose;
var _wp$data = wp.data,
    withSelect = _wp$data.withSelect,
    withDispatch = _wp$data.withDispatch;
var _wp$element = wp.element,
    Fragment = _wp$element.Fragment,
    Component = _wp$element.Component;
var PluginPostStatusInfo = wp.editPost.PluginPostStatusInfo;
var registerPlugin = wp.plugins.registerPlugin;

var LinksTo = function (_Component) {
	_inherits(LinksTo, _Component);

	function LinksTo(props) {
		_classCallCheck(this, LinksTo);

		var _this = _possibleConstructorReturn(this, (LinksTo.__proto__ || Object.getPrototypeOf(LinksTo)).call(this, props));

		_this.state = {
			prevUrl: '',
			prevNewTab: false
		};

		_this.toggleStatus = _this.toggleStatus.bind(_this);
		_this.toggleNewTab = _this.toggleNewTab.bind(_this);
		_this.updateLink = _this.updateLink.bind(_this);
		_this.state.enabled = _this.hasUrl();
		return _this;
	}

	_createClass(LinksTo, [{
		key: 'getUrl',
		value: function getUrl() {
			return this.props.meta._links_to || '';
		}
	}, {
		key: 'getDisplayUrl',
		value: function getDisplayUrl() {
			var prevUrl = this.state.prevUrl;

			return this.getUrl() || prevUrl;
		}
	}, {
		key: 'hasUrl',
		value: function hasUrl() {
			return this.getUrl().length > 0;
		}
	}, {
		key: 'opensInNewTab',
		value: function opensInNewTab() {
			return this.props.meta._links_to_target === '_blank';
		}
	}, {
		key: 'enabled',
		value: function enabled() {
			return this.state.enabled;
		}
	}, {
		key: 'toggleStatus',
		value: function toggleStatus() {
			var _this2 = this;

			var _state = this.state,
			    prevUrl = _state.prevUrl,
			    prevNewTab = _state.prevNewTab;


			this.setState(function (prevState) {
				var newState = {
					enabled: !prevState.enabled
				};

				if (prevState.enabled) {
					newState.prevUrl = _this2.getUrl();
				}

				return newState;
			});

			if (this.enabled()) {
				// If it was enabled before they clicked, they are disabling it.
				this.updateLink(null);
				this.updateNewTab(false);

				// Hold on to the previous state, in case they change their mind.
				this.setState({
					prevUrl: this.getUrl(),
					prevNewTab: this.opensInNewTab()
				});
			} else {
				// If it was disabled before thy clicked, they are enabling it.
				// We should restore the previous states of the url and new tab checkbox.
				this.updateLink(prevUrl);
				this.updateNewTab(prevNewTab);
			}
		}
	}, {
		key: 'toggleNewTab',
		value: function toggleNewTab() {
			this.updateNewTab(!this.opensInNewTab());
		}
	}, {
		key: 'updateLink',
		value: function updateLink(link) {
			var _props = this.props,
			    meta = _props.meta,
			    onUpdateLink = _props.onUpdateLink;

			onUpdateLink(meta, link);
		}
	}, {
		key: 'updateNewTab',
		value: function updateNewTab(enabled) {
			var _props2 = this.props,
			    meta = _props2.meta,
			    onUpdateNewTab = _props2.onUpdateNewTab;

			onUpdateNewTab(meta, enabled);
		}
	}, {
		key: 'render',
		value: function render() {
			return React.createElement(
				Fragment,
				null,
				React.createElement(
					PluginPostStatusInfo,
					null,
					React.createElement(CheckboxControl, {
						label: 'Custom Permalink',
						checked: this.enabled(),
						onChange: this.toggleStatus
					})
				),
				this.enabled() && React.createElement(
					Fragment,
					null,
					React.createElement(
						PluginPostStatusInfo,
						null,
						React.createElement(TextControl, {
							label: 'Links to',
							value: this.getDisplayUrl(),
							onChange: this.updateLink,
							placeholder: 'https://'
						})
					),
					React.createElement(
						PluginPostStatusInfo,
						null,
						React.createElement(CheckboxControl, {
							label: 'Open in new tab',
							checked: this.opensInNewTab(),
							onChange: this.toggleNewTab
						})
					)
				)
			);
		}
	}]);

	return LinksTo;
}(Component);

var PageLinksTo = compose([withSelect(function (select) {
	return {
		meta: select('core/editor').getEditedPostAttribute('meta')
	};
}), withDispatch(function (dispatch) {
	return {
		onUpdateLink: function onUpdateLink(meta, link) {
			dispatch('core/editor').editPost({ meta: _extends({}, meta, { _links_to: link }) });
		},
		onUpdateNewTab: function onUpdateNewTab(meta, enabled) {
			dispatch('core/editor').editPost({
				meta: _extends({}, meta, { _links_to_target: enabled ? '_blank' : '' })
			});
		}
	};
}), withInstanceId])(LinksTo);

registerPlugin('page-links-to', {
	render: PageLinksTo
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqcy9ndXRlbmJlcmcuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O3FCQ0FtRCxHQUFHLFU7SUFBOUMsUSxrQkFBQSxRO0lBQVUsVyxrQkFBQSxXO0lBQWEsZSxrQkFBQSxlO2tCQUNLLEdBQUcsTztJQUEvQixjLGVBQUEsYztJQUFnQixPLGVBQUEsTztlQUNhLEdBQUcsSTtJQUFoQyxVLFlBQUEsVTtJQUFZLFksWUFBQSxZO2tCQUNZLEdBQUcsTztJQUEzQixRLGVBQUEsUTtJQUFVLFMsZUFBQSxTO0lBQ1Ysb0IsR0FBeUIsR0FBRyxRLENBQTVCLG9CO0lBQ0EsYyxHQUFtQixHQUFHLE8sQ0FBdEIsYzs7SUFFRixPOzs7QUFDTCxrQkFBWSxLQUFaLEVBQW1CO0FBQUE7O0FBQUEsZ0hBQ1osS0FEWTs7QUFBQSxRQVFuQixLQVJtQixHQVFYO0FBQ1AsWUFBUyxFQURGO0FBRVAsZUFBWTtBQUZMLEdBUlc7O0FBRWxCLFFBQUssWUFBTCxHQUFvQixNQUFLLFlBQUwsQ0FBa0IsSUFBbEIsT0FBcEI7QUFDQSxRQUFLLFlBQUwsR0FBb0IsTUFBSyxZQUFMLENBQWtCLElBQWxCLE9BQXBCO0FBQ0EsUUFBSyxVQUFMLEdBQWtCLE1BQUssVUFBTCxDQUFnQixJQUFoQixPQUFsQjtBQUNBLFFBQUssS0FBTCxDQUFXLE9BQVgsR0FBcUIsTUFBSyxNQUFMLEVBQXJCO0FBTGtCO0FBTWxCOzs7OzJCQU9RO0FBQ1IsVUFBTyxLQUFLLEtBQUwsQ0FBVyxJQUFYLENBQWdCLFNBQWhCLElBQTZCLEVBQXBDO0FBQ0E7OztrQ0FFZTtBQUFBLE9BQ1AsT0FETyxHQUNLLEtBQUssS0FEVixDQUNQLE9BRE87O0FBRWYsVUFBTyxLQUFLLE1BQUwsTUFBaUIsT0FBeEI7QUFDQTs7OzJCQUVRO0FBQ1IsVUFBTyxLQUFLLE1BQUwsR0FBYyxNQUFkLEdBQXVCLENBQTlCO0FBQ0E7Oztr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LENBSjJCLEVBYzNCLGNBZDJCLENBQVIsRUFlakIsT0FmaUIsQ0FBcEI7O0FBaUJBLGVBQWUsZUFBZixFQUFnQztBQUMvQixTQUFRO0FBRHVCLENBQWhDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiY29uc3QgeyBQYW5lbFJvdywgVGV4dENvbnRyb2wsIENoZWNrYm94Q29udHJvbCB9ID0gd3AuY29tcG9uZW50cztcbmNvbnN0IHsgd2l0aEluc3RhbmNlSWQsIGNvbXBvc2UgfSA9IHdwLmNvbXBvc2U7XG5jb25zdCB7IHdpdGhTZWxlY3QsIHdpdGhEaXNwYXRjaCB9ID0gd3AuZGF0YTtcbmNvbnN0IHsgRnJhZ21lbnQsIENvbXBvbmVudCB9ID0gd3AuZWxlbWVudDtcbmNvbnN0IHsgUGx1Z2luUG9zdFN0YXR1c0luZm8gfSA9IHdwLmVkaXRQb3N0O1xuY29uc3QgeyByZWdpc3RlclBsdWdpbiB9ID0gd3AucGx1Z2lucztcblxuY2xhc3MgTGlua3NUbyBleHRlbmRzIENvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cdFx0c3VwZXIocHJvcHMpO1xuXHRcdHRoaXMudG9nZ2xlU3RhdHVzID0gdGhpcy50b2dnbGVTdGF0dXMuYmluZCh0aGlzKTtcblx0XHR0aGlzLnRvZ2dsZU5ld1RhYiA9IHRoaXMudG9nZ2xlTmV3VGFiLmJpbmQodGhpcyk7XG5cdFx0dGhpcy51cGRhdGVMaW5rID0gdGhpcy51cGRhdGVMaW5rLmJpbmQodGhpcyk7XG5cdFx0dGhpcy5zdGF0ZS5lbmFibGVkID0gdGhpcy5oYXNVcmwoKTtcblx0fVxuXG5cdHN0YXRlID0ge1xuXHRcdHByZXZVcmw6ICcnLFxuXHRcdHByZXZOZXdUYWI6IGZhbHNlLFxuXHR9O1xuXG5cdGdldFVybCgpIHtcblx0XHRyZXR1cm4gdGhpcy5wcm9wcy5tZXRhLl9saW5rc190byB8fCAnJztcblx0fVxuXG5cdGdldERpc3BsYXlVcmwoKSB7XG5cdFx0Y29uc3QgeyBwcmV2VXJsIH0gPSB0aGlzLnN0YXRlO1xuXHRcdHJldHVybiB0aGlzLmdldFVybCgpIHx8IHByZXZVcmw7XG5cdH1cblxuXHRoYXNVcmwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0VXJsKCkubGVuZ3RoID4gMDtcblx0fVxuXG5cdG9wZW5zSW5OZXdUYWIoKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJvcHMubWV0YS5fbGlua3NfdG9fdGFyZ2V0ID09PSAnX2JsYW5rJztcblx0fVxuXG5cdGVuYWJsZWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuc3RhdGUuZW5hYmxlZDtcblx0fVxuXG5cdHRvZ2dsZVN0YXR1cygpIHtcblx0XHRjb25zdCB7IHByZXZVcmwsIHByZXZOZXdUYWIgfSA9IHRoaXMuc3RhdGU7XG5cblx0XHR0aGlzLnNldFN0YXRlKHByZXZTdGF0ZSA9PiB7XG5cdFx0XHRjb25zdCBuZXdTdGF0ZSA9IHtcblx0XHRcdFx0ZW5hYmxlZDogIXByZXZTdGF0ZS5lbmFibGVkLFxuXHRcdFx0fTtcblxuXHRcdFx0aWYgKHByZXZTdGF0ZS5lbmFibGVkKSB7XG5cdFx0XHRcdG5ld1N0YXRlLnByZXZVcmwgPSB0aGlzLmdldFVybCgpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbmV3U3RhdGU7XG5cdFx0fSk7XG5cblx0XHRpZiAodGhpcy5lbmFibGVkKCkpIHtcblx0XHRcdC8vIElmIGl0IHdhcyBlbmFibGVkIGJlZm9yZSB0aGV5IGNsaWNrZWQsIHRoZXkgYXJlIGRpc2FibGluZyBpdC5cblx0XHRcdHRoaXMudXBkYXRlTGluayhudWxsKTtcblx0XHRcdHRoaXMudXBkYXRlTmV3VGFiKGZhbHNlKTtcblxuXHRcdFx0Ly8gSG9sZCBvbiB0byB0aGUgcHJldmlvdXMgc3RhdGUsIGluIGNhc2UgdGhleSBjaGFuZ2UgdGhlaXIgbWluZC5cblx0XHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0XHRwcmV2VXJsOiB0aGlzLmdldFVybCgpLFxuXHRcdFx0XHRwcmV2TmV3VGFiOiB0aGlzLm9wZW5zSW5OZXdUYWIoKSxcblx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBJZiBpdCB3YXMgZGlzYWJsZWQgYmVmb3JlIHRoeSBjbGlja2VkLCB0aGV5IGFyZSBlbmFibGluZyBpdC5cblx0XHRcdC8vIFdlIHNob3VsZCByZXN0b3JlIHRoZSBwcmV2aW91cyBzdGF0ZXMgb2YgdGhlIHVybCBhbmQgbmV3IHRhYiBjaGVja2JveC5cblx0XHRcdHRoaXMudXBkYXRlTGluayhwcmV2VXJsKTtcblx0XHRcdHRoaXMudXBkYXRlTmV3VGFiKHByZXZOZXdUYWIpO1xuXHRcdH1cblx0fVxuXG5cdHRvZ2dsZU5ld1RhYigpIHtcblx0XHR0aGlzLnVwZGF0ZU5ld1RhYighdGhpcy5vcGVuc0luTmV3VGFiKCkpO1xuXHR9XG5cblx0dXBkYXRlTGluayhsaW5rKSB7XG5cdFx0Y29uc3QgeyBtZXRhLCBvblVwZGF0ZUxpbmsgfSA9IHRoaXMucHJvcHM7XG5cdFx0b25VcGRhdGVMaW5rKG1ldGEsIGxpbmspO1xuXHR9XG5cblx0dXBkYXRlTmV3VGFiKGVuYWJsZWQpIHtcblx0XHRjb25zdCB7IG1ldGEsIG9uVXBkYXRlTmV3VGFiIH0gPSB0aGlzLnByb3BzO1xuXHRcdG9uVXBkYXRlTmV3VGFiKG1ldGEsIGVuYWJsZWQpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8RnJhZ21lbnQ+XG5cdFx0XHRcdDxQbHVnaW5Qb3N0U3RhdHVzSW5mbz5cblx0XHRcdFx0XHQ8Q2hlY2tib3hDb250cm9sXG5cdFx0XHRcdFx0XHRsYWJlbD1cIkN1c3RvbSBQZXJtYWxpbmtcIlxuXHRcdFx0XHRcdFx0Y2hlY2tlZD17dGhpcy5lbmFibGVkKCl9XG5cdFx0XHRcdFx0XHRvbkNoYW5nZT17dGhpcy50b2dnbGVTdGF0dXN9XG5cdFx0XHRcdFx0Lz5cblx0XHRcdFx0PC9QbHVnaW5Qb3N0U3RhdHVzSW5mbz5cblxuXHRcdFx0XHR7dGhpcy5lbmFibGVkKCkgJiYgKFxuXHRcdFx0XHRcdDxGcmFnbWVudD5cblx0XHRcdFx0XHRcdDxQbHVnaW5Qb3N0U3RhdHVzSW5mbz5cblx0XHRcdFx0XHRcdFx0PFRleHRDb250cm9sXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw9XCJMaW5rcyB0b1wiXG5cdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3RoaXMuZ2V0RGlzcGxheVVybCgpfVxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZUxpbmt9XG5cdFx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9XCJodHRwczovL1wiXG5cdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHQ8L1BsdWdpblBvc3RTdGF0dXNJbmZvPlxuXHRcdFx0XHRcdFx0PFBsdWdpblBvc3RTdGF0dXNJbmZvPlxuXHRcdFx0XHRcdFx0XHQ8Q2hlY2tib3hDb250cm9sXG5cdFx0XHRcdFx0XHRcdFx0bGFiZWw9XCJPcGVuIGluIG5ldyB0YWJcIlxuXHRcdFx0XHRcdFx0XHRcdGNoZWNrZWQ9e3RoaXMub3BlbnNJbk5ld1RhYigpfVxuXHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXt0aGlzLnRvZ2dsZU5ld1RhYn1cblx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdDwvUGx1Z2luUG9zdFN0YXR1c0luZm8+XG5cdFx0XHRcdFx0PC9GcmFnbWVudD5cblx0XHRcdFx0KX1cblx0XHRcdDwvRnJhZ21lbnQ+XG5cdFx0KTtcblx0fVxufVxuXG5jb25zdCBQYWdlTGlua3NUbyA9IGNvbXBvc2UoW1xuXHR3aXRoU2VsZWN0KHNlbGVjdCA9PiAoe1xuXHRcdG1ldGE6IHNlbGVjdCgnY29yZS9lZGl0b3InKS5nZXRFZGl0ZWRQb3N0QXR0cmlidXRlKCdtZXRhJyksXG5cdH0pKSxcblx0d2l0aERpc3BhdGNoKGRpc3BhdGNoID0+ICh7XG5cdFx0b25VcGRhdGVMaW5rOiAobWV0YSwgbGluaykgPT4ge1xuXHRcdFx0ZGlzcGF0Y2goJ2NvcmUvZWRpdG9yJykuZWRpdFBvc3QoeyBtZXRhOiB7IC4uLm1ldGEsIF9saW5rc190bzogbGluayB9IH0pO1xuXHRcdH0sXG5cdFx0b25VcGRhdGVOZXdUYWI6IChtZXRhLCBlbmFibGVkKSA9PiB7XG5cdFx0XHRkaXNwYXRjaCgnY29yZS9lZGl0b3InKS5lZGl0UG9zdCh7XG5cdFx0XHRcdG1ldGE6IHsgLi4ubWV0YSwgX2xpbmtzX3RvX3RhcmdldDogZW5hYmxlZCA/ICdfYmxhbmsnIDogJycgfSxcblx0XHRcdH0pO1xuXHRcdH0sXG5cdH0pKSxcblx0d2l0aEluc3RhbmNlSWQsXG5dKShMaW5rc1RvKTtcblxucmVnaXN0ZXJQbHVnaW4oJ3BhZ2UtbGlua3MtdG8nLCB7XG5cdHJlbmRlcjogUGFnZUxpbmtzVG8sXG59KTtcbiJdfQ==
